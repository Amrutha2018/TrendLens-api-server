"""Initial migration

Revision ID: 07fc5650975f
Revises: 
Create Date: 2024-11-06 21:22:17.548422

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07fc5650975f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    pass
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_index('ix_users_id', table_name='users')
    # op.drop_table('users')
    # op.drop_index('ix_youtube_filters_id', table_name='youtube_filters')
    # op.drop_table('youtube_filters')
    # op.drop_index('ix_auth_tokens_id', table_name='auth_tokens')
    # op.drop_table('auth_tokens')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='auth_tokens_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='auth_tokens_pkey')
    )
    op.create_index('ix_auth_tokens_id', 'auth_tokens', ['id'], unique=False)
    op.create_table('youtube_filters',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title_keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('description_keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('comments_keywords', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('exact_phrases', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('channel_name', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('channel_subscriber_min', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('channel_subscriber_max', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('minimum_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('minimum_likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('minimum_comments', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('minimum_comment_likes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('upload_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('upload_end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('comment_start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('comment_end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('video_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('duration_min', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('duration_max', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='youtube_filters_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='youtube_filters_pkey')
    )
    op.create_index('ix_youtube_filters_id', 'youtube_filters', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    # ### end Alembic commands ###
